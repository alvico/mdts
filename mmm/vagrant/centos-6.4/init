#! /bin/sh

set -x

echo bootstrap script $0 called at `date` with args $*

sudo yum install -y wget
sudo yum install -y curl
sudo yum install -y screen

# NOTE(tomoe): Chef client is already installed in vagrant offical vm box.
# echo Installing chef client...
# curl -L https://www.opscode.com/chef/install.sh | sudo bash

# add midokura yum source
cat <<EOF |sudo tee /etc/yum.repos.d/mido.repo
[Midokura]
name=Midokura Repo
baseurl=http://midocloud:base234aMido@yum.midokura.com/repo/v1.3/RHEL/6/
gpgcheck=1
gpgkey=http://midocloud:base234aMido@yum.midokura.com/repo/RPM-GPG-KEY-midokura
enabled=1
EOF

cat <<EOF |sudo tee /etc/yum.repos.d/datastax.repo
[datastax]
name= DataStax Repo for Apache Cassandra
baseurl=http://rpm.datastax.com/community
enabled=1
gpgcheck=0
EOF

cat <<EOF |sudo tee /etc/yum.repos.d/grizzly.repo
[epel-openstack-grizzly]
name=OpenStack Grizzly Repository for EPEL 6
baseurl=http://repos.fedorapeople.org/repos/openstack/openstack-grizzly/epel-\$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0
EOF

# EPEL from Fedora
sudo wget --no-check-certificate https://fedoraproject.org/static/0608B895.txt
sudo mv 0608B895.txt /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

cat <<EOF |sudo tee /etc/yum.repos.d/epel.repo
[epel]
name=Extra Packages for Enterprise Linux 6 - \$basearch
#baseurl=http://download.fedoraproject.org/pub/epel/6/\$basearch
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&arch=\$basearch
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

[epel-debuginfo]
name=Extra Packages for Enterprise Linux 6 - \$basearch - Debug
#baseurl=http://download.fedoraproject.org/pub/epel/6/\$basearch/debug
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&arch=\$basearch
failovermethod=priority
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
gpgcheck=1

[epel-source]
name=Extra Packages for Enterprise Linux 6 - \$basearch - Source
#baseurl=http://download.fedoraproject.org/pub/epel/6/SRPMS
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&arch=\$basearch
failovermethod=priority
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
gpgcheck=1
EOF

# update yum
sudo yum update -y

# Install zookeeper
sudo yum install -y zookeeper
sudo yum install -y zookeeper-lib
sudo chkconfig --add zookeeper
sudo chkconfig zookeeper off
sudo sed -i 's/\(JAVA_HOME=\).*$/\1\/usr\/lib\/jvm\/jre-1.7.0-openjdk.x86_64/' /etc/zookeeper/zookeeper-env.sh

# Install cassandra
sudo yum install -y dsc1.1
sudo chkconfig --add cassandra
sudo chkconfig cassandra off
CASSANDRA_CONF_FILE='/etc/cassandra/default.conf/cassandra.yaml'
sudo sed -i -e "s/^cluster_name:.*$/cluster_name: \'midonet\'/g" $CASSANDRA_CONF_FILE
CASSANDRA_ENV_FILE='/etc/cassandra/default.conf/cassandra-env.sh'
sudo sed -i 's/#\(MAX_HEAP_SIZE=\).*$/\1128M/' $CASSANDRA_ENV_FILE
sudo sed -i 's/#\(HEAP_NEWSIZE=\).*$/\164M/' $CASSANDRA_ENV_FILE

sudo service iptables stop # flush all preinstall rules

# Install midolman
sudo yum install -y midolman

# Install midonet-api
sudo yum install -y midonet-api
sudo yum install -y python-midonetclient
sudo yum install -y python-httplib2

# Install midonet-cp
sudo yum install -y midonet-cp

# Install tools
sudo yum install -y dnsmasq
#sudo yum install -y zkdump

# Install dependencies for MDTS
sudo yum install -y python-pip
sudo yum install -y python-devel
sudo yum install -y libyaml-devel
sudo pip install futures
sudo pip install pyyaml
sudo pip install pyhamcrest
sudo pip install nose

# ...and build mz manually
sudo yum install -y cmake
sudo yum install -y libnet-devel
sudo yum install -y libpcap-devel
(cd /tmp && wget https://github.com/dparrish/libcli/archive/v1.9.7.tar.gz \
    -O libcli-1.9.7.tar.gz && \
    tar zxvf libcli-1.9.7.tar.gz && \
    cd libcli-1.9.7 && \
    make && sudo make install)
(cd /tmp && wget http://www.perihel.at/sec/mz/mz-0.40.tar.gz \
    -O mz-0.40.tar.gz && \
    tar zxvf mz-0.40.tar.gz && \
    cd mz-0.40 && \
    sed 's%\(SET(CMAKE_C_FLAGS.*\)$%\1\nSET(CMAKE_EXE_LINKER_FLAGS "-Wl,--rpath -Wl,/usr/local/lib")%g' -i CMakeLists.txt && \
    cmake . && make && sudo make install)

# tmux
(cd /tmp && wget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz -O libevent-2.0.21-stable.tar.gz && \
    tar zxvf libevent-2.0.21-stable.tar.gz && \
    cd libevent-2.0.21-stable && \
    ./configure && make && make install)
(cd /tmp && wget http://downloads.sourceforge.net/tmux/tmux-1.8.tar.gz \
    -O tmux-1.8.tar.gz && \
    tar zxvf  tmux-1.8.tar.gz && \
    cd tmux-1.8 && \
    ./configure LDFLAGS='-Wl,--rpath -Wl,/usr/local/lib' && \
    make && make install)

# tools to build RPM packages
# rpm -Uhv --nodeps ftp://rpmfind.net/linux/fedora/linux/releases/18/Everything/x86_64/os/Packages/a/autoconf-2.69-3.fc18.noarch.rpm
# sudo yum install -y automake
# sudo yum install -y rpm-build
# sudo yum install -y redhat-rpm-config
# sudo yum install -y git

if test -d /opt/qa/mmm; then
    # replace with in-source ovs module
    modprobe -r openvswitch
    insmod /lib/modules/$(uname -r)/kernel/net/openvswitch/openvswitch.ko
    cd /opt/qa/mmm && (cd scripts && sudo bash init) && exec sudo bash boot
else
    exit 1
fi
